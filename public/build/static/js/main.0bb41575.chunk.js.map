{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["backendURL","process","App","state","trumpURL","kanyeURL","gif","tweet","kanyeOrTrump","score","answer","signUp","login","firstName","lastName","username","password","loginUsername","loginPassword","token","userid","baseURL","savedTweets","handleChange","event","setState","currentTarget","id","value","handleClick","refs","kanye","removeAttribute","trump","Math","floor","random","fetch","then","res","json","data","catch","err","console","log","checkScoreKanye","newScore","embed_url","setAttribute","checkScoreTrump","saveTweet","loginInfo","JSON","parse","localStorage","getItem","method","body","stringify","savedTweet","headers","error","delete","index","preventDefault","resJson","setItem","createUser","logout","cancel","this","className","onClick","style","width","onSubmit","type","onChange","placeholder","name","marginLeft","src","height","frameBorder","class","allowFullScreen","quote","message","ref","map","border","backgroundColor","e","key","viewBox","fill","xmlns","d","fill-rule","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0bb41575.chunk.js","sourcesContent":["import React, { Component} from 'react';\nconst backendURL = process.env.REACT_APP_BACKEND_URL || \"http://localhost:3003\";\nexport default class App extends Component {\n  state = {\n    trumpURL: 'https://api.whatdoestrumpthink.com/api/v1/quotes/random',\n    kanyeURL: 'https://api.kanye.rest/',\n    gif: '',\n    tweet: '',\n    //if 0 then Kanye if 1 then Trump\n    kanyeOrTrump: 0,\n    score: 0,\n    answer: false,\n    //Sasi - added the below variables\n    signUp:false,\n    login:false,\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    password: \"\",\n    loginUsername: \"\",\n    loginPassword: \"\",\n    token:\"\",\n    userid:\"\",\n    baseURL: backendURL,\n    savedTweets:[]\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.currentTarget.id]: event.currentTarget.value})\n  }\n\n      handleClick = () => {\n        this.refs.kanye.removeAttribute(\"disabled\");\n        this.refs.trump.removeAttribute(\"disabled\");\n        let randomiser = () => {\n          return Math.floor(Math.random() * Math.floor(2))\n        }\n\n        if (randomiser() === 0) {\n          fetch(this.state.kanyeURL).then(res =>  {\n            return res.json();\n          }).then(data => {\n            this.setState({\n              tweet: data,\n              kanyeOrTrump: 0,\n              answer: false,\n            });\n          }).catch(err => {\n            console.log('error:', err);\n          })\n        } else {\n          fetch(this.state.trumpURL).then(res =>  {\n            return res.json();\n          }).then(data => {\n            this.setState({\n              tweet: data,\n              kanyeOrTrump: 1,\n              answer: false,\n            });\n          }).catch(err => {\n            console.log('error:', err);\n          })\n        }\n      }\n\n      //Need to figure out how to only allow one click ie for score to only be added once on click\n      checkScoreKanye = () => {\n        if (this.state.kanyeOrTrump === 0) {\n          let newScore = this.state.score + 1;\n\n          fetch('https://api.giphy.com/v1/gifs/random?api_key=' + process.env.REACT_APP_SECRET + '&tag=kanye-west&rating=r').then(res =>  {\n            return res.json();\n          }).then(data => {\n            console.log(data);\n            this.setState({\n              score: newScore,\n              gif: data.data.embed_url,\n              kanyeOrTrump: 1,\n              answer: false,\n            });\n          })\n          } else {\n            this.setState({\n              gif: 'https://giphy.com/gifs/kanye-west-shrug-shrugging-UUvaW1L0SK9Mc',\n              answer: !this.state.answer,\n            })\n          }\n          this.refs.trump.setAttribute(\"disabled\", \"disabled\");\n          this.refs.kanye.setAttribute(\"disabled\", \"disabled\");\n        }\n\n      checkScoreTrump = () => {\n        if (this.state.kanyeOrTrump === 1) {\n          let newScore = this.state.score + 1;\n          \n          fetch('https://api.giphy.com/v1/gifs/random?api_key=' + process.env.REACT_APP_SECRET + '&tag=donald-trump&rating=r').then(res =>  {\n            return res.json();\n          }).then(data => {\n            console.log(data);\n            this.setState({\n              score: newScore,\n              gif: data.data.embed_url,\n              kanyeOrTrump: 1,\n              answer: false,\n            });\n          })\n        } else {\n          fetch('https://api.giphy.com/v1/gifs/random?api_key=' + process.env.REACT_APP_SECRET + '&tag=incorrect&rating=r').then(res =>  {\n            return res.json();\n          }).then(data => {\n            console.log(data);\n            this.setState({\n              gif: data.data.embed_url,\n              answer: !this.state.answer,\n            });\n          })\n        }\n        this.refs.trump.setAttribute(\"disabled\", \"disabled\");\n        this.refs.kanye.setAttribute(\"disabled\", \"disabled\");\n      }\n\n      saveTweet = (tweet) => {\n        console.log('frontend-tweet', tweet);\n        console.log('this is the id: ', this.state.userid);\n        let loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n            fetch(this.state.baseURL + '/tweetbattle/' + this.state.userid, {\n                method: 'PUT',\n                body: JSON.stringify({ \n                    savedTweet: tweet,\n                    id: this.state.userid,\n                    password:loginInfo.loginPassword,\n                    token:loginInfo.token\n                }),\n                headers:  {\n                    'Content-Type': 'application/json'\n                }\n            }).then(res =>  {\n                return res.json()\n            }).then(data =>  {\n                this.setState({\n                    savedTweets: data,\n                })\n            }).catch(error =>  console.log({'Error': error}))\n        }\n\n      delete = (index) => {\n       //event.preventDefault();\n        console.log('this is the id: ', this.state.userid);\n        console.log('index: ', index);\n        let loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n            fetch(this.state.baseURL + '/tweetbattle/', {\n                method: 'DELETE',\n                body: JSON.stringify({ \n                    index: index,\n                    id: this.state.userid,\n                    password:loginInfo.loginPassword,\n                    token:loginInfo.token\n                }),\n                headers:  {\n                    'Content-Type': 'application/json'\n                }\n            }).then(res =>  {\n                return res.json()\n            }).then(data =>  {\n                this.setState({\n                    savedTweets: data,\n                })\n            }).catch(error =>  console.log({'Error': error}))\n        }        \n\n  //Sasi - added signup function\n  signUp = (event) => {\n    event.preventDefault();\n    this.setState({signUp: true, login:false});\n  }\n\n//Sasi - added login function\nlogin = (event) => {\n    event.preventDefault();\n    fetch(this.state.baseURL + '/tweetbattle/login', {\n      method: 'POST',\n      body: JSON.stringify({username: this.state.loginUsername, \n                            password: this.state.loginPassword}\n                            ),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then (res => res.json())\n      .then (resJson => {console.log(resJson);\n        this.setState({\n          login:true,\n          loginUsername: resJson.username,\n          loginPassword: \"\",\n          token:resJson.token,\n          userid:resJson.id,\n          savedTweets:resJson.savedTweets\n        })\n        localStorage.setItem(\"loginInfo\",JSON.stringify({id:resJson.id, loginPassword: resJson.password, loginUsername:resJson.username, token:resJson.token}));\n    }).catch (error => console.error({'Error': error}))\n    \n  }\n\n  //Sasi - create route function\n  createUser = (event) => {\n    event.preventDefault();\n\n    fetch(this.state.baseURL + '/tweetbattle', {\n      method: 'POST',\n      body: JSON.stringify({firstName: this.state.firstName, \n                            lastName: this.state.lastName, \n                            username: this.state.username, \n                            password: this.state.password}\n                            ),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then (res => res.json())\n      .then (resJson => {\n        this.setState({\n          signUp:false,\n          firstName: \"\",\n          lastName: \"\",\n          username: \"\",\n          password: \"\"\n        })\n    }).catch (error => console.error({'Error': error}))\n\n  }\n\n  //Sasi - added logout function\n  logout = (event) => {\n    event.preventDefault();\n    this.setState({login: false, token:\"\"});\n  }\n\n  //Sasi - added cancel function\n  cancel = (event) => {\n    event.preventDefault();\n    this.setState({signUp: false, login:false});\n  }\n\n  componentDidMount() {\n    this.handleClick();\n    //Sasi = Storing token and userid\n    let loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n    console.log(loginInfo);\n    if(loginInfo && loginInfo.token)\n    this.setState({token:loginInfo.token, userid:loginInfo.id, loginUsername:loginInfo.loginUsername, login:true});\n  }\n  \n\n  render() {\n    return (\n      <div className=\"main\">\n\n        <div className=\"loggedIn\">\n        {this.state.login? <button className=\"btn btn-dark float-right\" onClick={this.logout}>Logout</button>:\"\"}\n        </div>\n        {/* Sasi - START Toggle for Signup */}\n        {this.state.signUp? \n          <form className=\"form\" style={{width:\"50%\"}} onSubmit={this.createUser}>\n          <div className=\"form-group\">\n                <input className=\"form-control\" type=\"text\" onChange={this.handleChange} value={this.state.firstName} placeholder=\"First name\" id=\"firstName\" name=\"firstName\"/>\n            </div>\n            <div className=\"form-group\">\n                <input className=\"form-control\" type=\"text\"  onChange={this.handleChange} value={this.state.lastName} placeholder=\"Last name\" id=\"lastName\" name=\"lastName\"/>\n            </div>\n            <div className=\"form-group\">\n                <input className=\"form-control\" type=\"text\" onChange={this.handleChange} value={this.state.username} id=\"username\" name=\"username\" placeholder=\"email (Username)\"/>\n            </div>\n            <div className=\"form-group\"> \n                <input  className=\"form-control\" type=\"password\" onChange={this.handleChange} value={this.state.password} id=\"password\" name=\"password\" placeholder=\"Password\"/>\n            </div>\n            <div className=\"form-group\">\n                <input className=\"btn btn-primary form-control\" style={{width:\"70%\"}} type=\"submit\" value=\"Sign up\"/>\n                <input className=\"btn btn-danger form-control\" style={{width:\"25%\", marginLeft: \"6px\"}} onClick={this.cancel} value=\"Cancel\"/>\n            </div>  \n          </form>\n          :    \n          <>\n            {this.state.login? \"\":\n                  <ul className=\"nav\">\n                  <li className=\"nav-item\">\n                    <input className=\"form-control\" type=\"text\" onChange={this.handleChange} value={this.state.loginUsername} id=\"loginUsername\" name=\"loginUsername\" placeholder=\"email (Username)\"/>\n                  </li>\n                  <li className=\"nav-item\">\n                      <input  className=\"form-control\" type=\"password\" onChange={this.handleChange} value={this.state.loginPassword} id=\"loginPassword\" name=\"loginPassword\" placeholder=\"Password\"/>\n                  </li>\n                  <li className=\"nav-item\">    \n                  <button className=\"btn btn-primary form-control\" style={{marginLeft:\"6px\"}}onClick={this.login}>Login</button>\n                  </li>\n                  <li className=\"nav-item\">\n                    <button className=\"btn btn-primary form-control\" style={{marginLeft:\"12px\"}} onClick={this.signUp}>Signup</button>\n                  </li>\n                </ul>\n            }          \n            <h1>Trump vs. Kanye: Who Done It?</h1>\n            <p>It's a true battle of the intellect. Can you guess who said what?</p>\n            <h2> <div>Score: { this.state.score }</div> </h2>\n\n            <iframe src={ this.state.gif } width=\"480\" height=\"222\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe>\n\n            <div className=\"container\">\n            {\n              this.state.answer\n              ? <div className=\"answer\">Better luck next time! Don't worry you are still the greatest</div>\n              : ''\n            } \n\n            \n\n            <h3 className=\"quote\">\n            {\n              this.state.tweet.quote\n              ? <div>\"{ this.state.tweet.quote }\"</div>\n              : ''\n            }\n            {\n              this.state.tweet.message\n              ? <div>\"{ this.state.tweet.message }\"</div>\n              : ''\n            }\n            </h3><br/>\n            <button ref=\"kanye\" className=\"btn btn-primary\" style={{marginLeft:\"6px\"}} onClick={ () => this.checkScoreKanye() }>Kanye</button>\n            <button ref=\"trump\" className=\"btn btn-primary\" style={{marginLeft:\"6px\"}} onClick={ () => this.checkScoreTrump() }>Trump</button>\n            <button className=\"btn btn-primary\" style={{marginLeft:\"6px\"}} onClick={ () => this.handleClick() }>New Quote</button>\n            \n            { \n            ( this.state.login && this.state.tweet.quote )\n            ? \n            <button className=\"btn btn-success\" style={{marginLeft:\"6px\"}} onClick={ () => this.saveTweet(this.state.tweet.quote) }>Save Tweet</button>\n            :\n            ( this.state.login && this.state.tweet.message )\n            ?\n            <button className=\"btn btn-success\" style={{marginLeft:\"6px\"}} onClick={ () => this.saveTweet(this.state.tweet.message) }>Save Tweet</button>\n            : \"\"\n            }\n\n          </div>\n\n            <div className=\"row justify-content-center allSavedTweets\">\n            {\n              (this.state.savedTweets && this.state.login)\n              ?\n              this.state.savedTweets.map((tweet,index) => {\n                return (\n                <div className=\"w-25 p-3 savedTweet\">\n                  <button style={{marginLeft:\"80%\", border:\"none\", backgroundColor:\"white\"}} onClick={e => this.delete(index)} key={index} value={index}>\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n                      <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n                    </svg>\n                  </button>\n                  <br/>\n                  { tweet }\n                  </div>\n                )\n              })\n              \n              : ''\n              \n            }\n            </div>\n\n            \n\n          </>\n\n          \n        }\n\n      <div className=\"footer\">\n      <div className=\"footer-text\">\n        Copyright &copy; 2020 &mdash; TheGreatestBattle | Made with &hearts; in Texas, Atlanta & London\n      </div>\n      </div>\n\n        {/* Sasi - END Toggle for Signup */}\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}